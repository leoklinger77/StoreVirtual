
@model IPagedList<StoreVirtual.Models.Cliente>
@{
    ViewData["Title"] = "Index";
    var search = Context.Request.Query["search"];
}
<h1>Funcionario</h1>

<br />
<br />
<form method="get">
    <div class="form-group">
        <label for="search"></label>
        <input name="search" id="search" value="@search" class="form-control" type="text" placeholder="Digite o nome ou e-mail do cliente" />        
    </div>    

    <button type="submit" class="btn btn-primary">Pesquisar</button>    
</form>

<br />
<br />
@if (@TempData["MSG_S"] != null)
{
    <p class="alert alert-success">@TempData["MSG_S"]</p>
}
@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nome</th>
                    <th>Email</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Cliente item in Model)
                {
                    <tr>
                        <th>@item.Id</th>
                        <th>@item.Nome</th>
                        <th>@item.Email</th>
                        <th>
                            @if (item.Situacao == "A")
                            {
                                <a asp-action="AtivarDesativar" asp-route-id="@item.Id" class="btn btn-danger">Desativar</a>
                            }
                            else
                            {
                                <a asp-action="AtivarDesativar" asp-route-id="@item.Id" class="btn btn-secondary">Ativar</a>
                            }
                        </th>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page  = page, search = search}))
    </div>
}
else
{
    <span>Nenhum registro cadastrado</span>
}

