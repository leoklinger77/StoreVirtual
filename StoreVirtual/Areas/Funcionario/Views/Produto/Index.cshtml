@model IPagedList<StoreVirtual.Models.Produto>
@{
    ViewData["Title"] = "Index";
    var search = Context.Request.Query["search"];
}
<h1>Produto</h1>
<form method="get">
    <div class="form-group">
        <label for="search"></label>
        <input name="search" id="search" value="@search" class="form-control" type="text" placeholder="Digite o nome do produto" />
    </div>

    <button type="submit" class="btn btn-primary">Pesquisar</button>
</form>
<br />
<a asp-action="Insert" class="btn btn-primary">Casdastrar</a>
<br />
<br />
@if (@TempData["MSG_S"] != null)
{
    <p class="alert alert-success">@TempData["MSG_S"]</p>
}
@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nome</th>
                    <th>Categoria</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <th>@item.Id</th>
                        <th>@item.Nome</th>
                        <th>@item.Categoria.Nome</th>
                        <th>
                            <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-primary">Atualizar</a>
                            <a asp-action="Remove" asp-route-id="@item.Id" class="btn btn-danger excluir">Deletar</a>
                        </th>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, search = search }))
    </div>
}
else
{
    <span>Nenhum registro cadastrado</span>
}

